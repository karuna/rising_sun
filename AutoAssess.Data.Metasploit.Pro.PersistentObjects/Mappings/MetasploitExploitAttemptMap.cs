using System;
using AutoAssess.Data.Metasploit.Pro.PersistentObjects;
using FluentNHibernate.Mapping;

namespace Mappings
{
	public class MetasploitExploitAttemptMap : ClassMap<PersistentMetasploitExploitAttempt>
	{
		public MetasploitExploitAttemptMap ()
		{
			Table ("metasploitexploitattempt");
			
			Id (c => c.ID).Column("metasploitexploitattemptid")
				.GeneratedBy.Assigned();
			
			Map (c => c.CreatedBy).Column("createdby");
			Map (c => c.CreatedOn).Column("createdon");
			Map (c => c.LastModifiedBy).Column("lastmodifiedby");
			Map (c => c.LastModifiedOn).Column("lastmodifiedon");
			Map (c => c.IsActive).Column("isactive");
			Map (c => c.AttemptedAt).Column("attemptedat");
			Map (c => c.FailDetail).Column("faildetail");
			Map (c => c.FailReason).Column("failreason");
			Map (c => c.Module).Column("module");
			Map (c => c.Port).Column("port");
			Map (c => c.Protocol).Column("protocol");
			Map (c => c.RemoteHostID).Column("remotehostid");
			Map (c => c.RemoteID).Column("remoteid");
			Map (c => c.RemoteLootID).Column("remotelootid");
			Map (c => c.RemoteServiceID).Column("remoteserviceid");
			Map (c => c.RemoteSessionID).Column("remotesessionid");
			Map (c => c.RemoteVulnerabilityID).Column("remotevulnerabilityid");
			Map (c => c.Username).Column("username");
		}
	}
}

