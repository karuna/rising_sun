using System;
using AutoAssess.Data.Metasploit.Pro.BusinessObjects;

namespace AutoAssess.Data.Metasploit.Pro.PersistentObjects
{
	[Serializable]
	public class PersistentMetasploitExploitAttempt : MetasploitExploitAttempt
	{
		public PersistentMetasploitExploitAttempt ()
		{
		}
		
		public PersistentMetasploitExploitAttempt(MetasploitExploitAttempt attempt)
		{
			this.AttemptedAt = attempt.AttemptedAt;
			this.FailDetail = attempt.FailDetail;
			this.FailReason = attempt.FailReason;
			this.Module = attempt.Module;
			this.Port = attempt.Port;
			this.Protocol = attempt.Protocol;
			this.RemoteHostID = attempt.RemoteHostID;
			this.RemoteID = attempt.RemoteID;
			this.RemoteLootID = attempt.RemoteLootID;
			this.RemoteServiceID = attempt.RemoteServiceID;
			this.RemoteSessionID = attempt.RemoteSessionID;
			this.RemoteVulnerabilityID = attempt.RemoteVulnerabilityID;
			this.Username = attempt.Username;
		}
		
		public virtual Guid ID { get; set; }
		
		public virtual Guid CreatedBy { get; set; }
		
		public virtual DateTime CreatedOn { get; set; }
		
		public virtual Guid LastModifiedBy { get; set; }
		
		public virtual DateTime LastModifiedOn { get; set; }
		
		public virtual bool IsActive { get; set; }
		
		public virtual void SetCreationInfo(Guid owner)
		{
			DateTime now = DateTime.Now;
			
			this.ID = Guid.NewGuid();
			this.CreatedBy = owner;
			this.CreatedOn = now;
			this.LastModifiedBy = owner;
			this.LastModifiedOn = now;
			this.IsActive = true;
		}
		
		public virtual void SetUpdateInfo(Guid modifier)
		{
			this.LastModifiedOn = DateTime.Now;
			this.LastModifiedBy = modifier;
		}
	}
}

